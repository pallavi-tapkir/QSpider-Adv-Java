package hibernate_task1;

import java.util.Scanner;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

public class EmployeeCRUD {

	public void saveEmployee(Employee employee) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("pallavi");
		EntityManager entityManager = emf.createEntityManager();
		EntityTransaction entityTransaction = entityManager.getTransaction();
		entityTransaction.begin();
		entityManager.persist(employee);
		entityTransaction.commit();
	}
	
	public void update(Employee employee) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("pallavi");
		EntityManager entityManager = emf.createEntityManager();
		EntityTransaction entityTransaction = entityManager.getTransaction();
		
		Employee employee2 = entityManager.find(Employee.class, employee.getId());
		
		employee2.setName(employee.getName());
		employee2.setSalary(employee.getSalary());
		
		entityTransaction.begin();
		entityManager.merge(employee2);
		entityTransaction.commit();
	}
	
	public void delete(int id) {
		EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("pallavi");
		EntityManager entityManager =entityManagerFactory.createEntityManager();
		EntityTransaction entityTransaction = entityManager.getTransaction();
		
		Employee employee = entityManager.find(Employee.class, id);
		entityTransaction.begin();
		entityManager.remove(employee);
		entityTransaction.commit();
		
	}
	
	public void getEmployeeById(int id) {
		EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("pallavi");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		Employee employee = entityManager.find(Employee.class, id);
		System.out.println(employee);
	}
	
	public void getAllEmployees() {
		EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("pallavi");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		Query query = entityManager.createQuery("select e from employee e");
		System.out.println(query.getResultList());
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Employee employee = new Employee();
		Scanner scanner = new Scanner(System.in);
		
		System.out.println("1. save new employee \n2. update existing employee \n3. deleteEmployee"
				+ " \n4. Get Employee by id \n5. Get all employees");
		int choice = scanner.nextInt();
		
		int id = 0;
		if(choice != 5) {
			System.out.println("Enter id = ");
			id = scanner.nextInt();
			employee.setId(id);
		}
		
		if (choice == 1 || choice == 2) {
			System.out.println("Enter the employee name = ");
			String nameString = scanner.next();
			employee.setName(nameString);
			
			System.out.println("Enter the salary = ");
			double salary = scanner.nextDouble();
			employee.setSalary(salary);
		}
		
		EmployeeCRUD employeeCRUD = new EmployeeCRUD();
		if(choice == 1) {
			employeeCRUD.saveEmployee(employee);
		}else if(choice == 2) {
			employeeCRUD.update(employee);
		}else if(choice == 3) {
			employeeCRUD.delete(id);
		}else if(choice == 4){
			employeeCRUD.getEmployeeById(id);
		}else if(choice == 5){
			employeeCRUD.getAllEmployees();
		}else{
			System.out.println("Enter valid input");
		}
		
		scanner.close();
	}

}
